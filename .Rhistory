knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 10, fig.height = 7)
# Download R packages
library(tidyverse)
library(scales)
library(plotly)
library(colorspace)
library(rgl)
library(webshot)
### Import the dataset from the working directory
dpf_dataset <- read_csv("dpf_dataset.csv")
# Plot using plotly
m <- list(l = 0,  r = 0, b = 0, t = 0, pad = 4)
#m <- list(l = 50, r = 50, b = 100, t = 100, pad = 4)
my_colours <- colorRamp(c("red", "navy"))
dpf_dataset %>%
plot_ly(x = ~year, y = ~dpfv_stat_usd, z = ~dpfv_elect_usd,
marker = list(symbol = 'circle', opacity = 0.8, sizemode = 'diameter'),
size = ~dpfv_total,
sizes = c(5, 50),
color = ~dpfv_total,
#strokes = "dodgerblue4",
#colors = my_colours,
colors = "viridis",
hoverinfo = 'text',
text = ~paste("Country: ", country_id, "<br>",
"Year: ", year, "<br>",
"Total Funding: ", dpfv_total)) %>%
add_markers() %>%
#hide_colorbar() %>%
colorbar(title = "Total<br>Funding",
limits = c(0,20),
tickprefix = '$',
tickfont=list(size=14),
y = 0.8) %>%
# Axes labels and title:
layout(scene = list(
zaxis = list(title = "DPF Elections $"),
yaxis = list(title = "DPF Statutory $"),
xaxis = list(title = "Year"))) %>%
layout(margin = m)
#layout(legend = list(title = list(text = "<b> Total DPF <b>"))) %>%
#add_annotations(text = "Note: The plot illustrates the relationship between direct state subsidies of political parties<br>across post-communist regimes by thesize of total funding during almost three decades<br>from the outset oftransition from communist rule. Use plot menue and hover over the points for details.", x = 0.5, y = -0.15)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Download R packages
library(tidyverse)
library(haven)
library(car)
library(rgl)
pei <- read_dta("PEI election-level data (PEI_8.0).dta")
pei <- pei %>%
mutate(fh_score = fhcategory + 1)
par(mar = c(0,0,0,0))
par(oma = c(0,0,0,0))
car::scatter3d(rich ~ donations + subsidies, data = pei,
xlab = "Donations",
ylab = "Rich",
zlab = "Subsidies",
axis.ticks = TRUE,
fit = "additive",
axis.col = c("lightblue4", "steelblue4", "skyblue4"),
surface.col= "gray95",
surface.alpha=0.5,
grid.lines = 16,
neg.res.col="indianred1",
pos.res.col="lightsteelblue2",
point.col = "navy")
rglwidget()
install.packages("car")
install.packages("effects")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Download R packages
library(tidyverse)
library(openxlsx)
library(scales)
library(ggthemes)
library(ggrepel)
library(GGally)
library(ggpubr)
library(svglite)
library(cowplot)
library(ggsci)
library(ggeffects)
####################################
## Import the dataset from the working directory
upside <- read.xlsx("upside_full.xlsx")
upside %>%
select(cpp_2011, cpi_rev, v2x_corr, wbgi_rev, bci, corr_icrg, corr_sem) %>%
ggpairs(columnLabels = c("GCB", "CPI", "V-DEM", "WBGI", "BCI", "ICRG", "SEM"),
lower = list(continuous = wrap("points", color = "lightsteelblue4", alpha = 0.5, size = 2)),
upper = list(continuous = wrap("cor", color = "lightsteelblue4", size = 4, family = "serif"))) +
theme_minimal(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
strip.text = element_text(size = 12))
library(modelsummary)
lm_models <- list(
m1 <- lm(norm_cpp ~ state_dependency + payout_threshold + donation_limits + v2x_polyarchy, data = upside),
m2 <- update(m1, norm_vdem ~.),
m3 <- update(m1, norm_icrg ~.),
m4 <- update(m1, norm_sem ~.))
model_names <- c("GCB", "V-DEM", "ICRG", "SEM")
names(lm_models) <- model_names
lm_models_df <- map(lm_models, ~tidy(.x, conf.int = T)) %>%
bind_rows(.id = "indexes") %>%
mutate(conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error) %>%
filter(term == "state_dependency")
ggplot(lm_models_df, aes(x = fct_reorder(indexes, estimate), y= estimate)) +
geom_point(size = 2, color = "lightsteelblue4") +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "lightsteelblue4", linewidth = 0.5) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "lightsteelblue4", linewidth = 1.2) +
geom_hline(yintercept = 0, linetype = 5, color = "darkslategrey") +
coord_flip() +
#facet_wrap(~ model_type, scales = "free_x", ncol = 3) +
theme_light(base_family = "serif") +
theme(panel.border = element_rect(color = "gray30"),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 12, color = "gray10"),
axis.title.x = element_text(size = 12),
axis.title.y = element_blank()) +
labs(y = "Public funding estimates with 90% \nand 95% Confidence Intervals" , x = "")
lm_models_mdx <- map(lm_models, ~ggeffect(.x, terms = "state_dependency")) %>%   bind_rows(.id = "indexes")
ggplot(lm_models_mdx, aes(x = x, y = predicted)) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = "grey80", alpha = 0.5) +
geom_line(color = "steelblue4") +
scale_y_continuous(breaks = seq(-2, 1, 0.5))+
facet_wrap(~ indexes, scales = "free_x", ncol = 4) +
geom_hline(yintercept = 0, color = "slategray4", linetype = 5) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey92"),
strip.text = element_text(size = 11, color = "gray10"),
axis.text = element_text(size = 12, color = "gray10"),
axis.title = element_text(size = 13, color = "gray10"),
strip.background = element_rect(fill = "white"),
plot.margin = unit(c(0,0.2,0,0.2), "lines")) +
labs( x = "State dependency rate (%)", y = "Predicted corruption values")
mtcars
with(mtcars, plot(mpg, wt))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Download R packages
library(tidyverse)
#library(readstata13)
library(fixest)
#library(openxlsx)
library(broom)
library(scales)
library(cowplot)
library(ggeffects)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
pf_data <- read.dta13("dpf_hummel.dta", generate.factors = T, nonint.factors = T)
library(readstata13)
pf_data <- read.dta13("dpf_hummel.dta", generate.factors = T, nonint.factors = T)
pf_data <- read.dta13("dpf_hummel.dta", generate.factors = T, nonint.factors = T)
pf_data <- pf_data %>%
rename("country" = "country_id") %>%
select(1:3, e_regiongeo, e_regionpol, everything())
# Download R packages
library(tidyverse)
library(readstata13)
library(fixest)
#library(openxlsx)
library(broom)
library(scales)
library(cowplot)
library(ggeffects)
####################################
#setwd("C:/Users/sergi/Documents/EUI/Projects/blogposts")
#getwd()
### Import the dataset from the working directory
pf_data <- read.dta13("dpf_hummel.dta", generate.factors = T, nonint.factors = T)
pf_data <- pf_data %>%
rename("country" = "country_id") %>%
select(1:3, e_regiongeo, e_regionpol, everything())
#summary(upside_2$e_wbgi_cce)
# Model labels
model_labels <- c("lag(pubfinindexstock1log, 5)" = "Public funding stock",
"lag(v2x_polyarchyV8, 5)" = "Poliarchy",
"lag(I(v2x_polyarchyV8^2), 5)" = "Poliarchy squared",
"lag(Fariss_Maddison_gdppc_1990_ln, 5)" = "GDP per capita",
"lag(Fariss_e_miurbani, 5)" = "Urbanisation",
"lag(Fariss_gdp_growth, 5)" = "GDP growth",
"lag(v2x_elecregV8, 5)" = "Regular elections")
### ROBUSTNESS/ SENSITIVITY TESTS for year FE models, country-based Jackknife, model 6, which displays relatively good fit statistics and larger explained variance
pf_data_panel <- panel(pf_data, ~country + year)
### ROBUSTNESS/ SENSITIVITY TESTS for year FE models, country-based Jackknife, model 6, which displays relatively good fit statistics and larger explained variance
pf_data_panel <- panel(pf_data, ~country + year)
models_by_region <- list(
m1 <- feols(v2x_corrV8 ~ lag(pubfinindexstock1log, 5) + lag(v2x_polyarchyV8, 5) + lag(I(v2x_polyarchyV8^2), 5) + lag(Fariss_Maddison_gdppc_1990_ln, 5) + lag(Fariss_e_miurbani, 5) + lag(Fariss_gdp_growth, 5) + lag(v2x_elecregV8, 5) | country + year, data = pf_data_panel, vcov = "twoway"),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "Latin America")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "The Caribbean")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "Western Europe and North America")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "Sub-Saharan Africa")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "East Asia")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "South-East Asia")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "Eastern Europe and Central Asia (post-Communist)")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "MENA (Middle East & North Africa)")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "South Asia")),
update(m1, .~., data = subset(pf_data_panel, e_regionpol == "The Pacific")))
names(models_by_region) <- c("Entire World" ,"Latin America", "The Caribbean", "Western Europe and North America", "Sub-Saharan Africa", "East Asia", "South-East Asia", "Eastern Europe and Central Asia (post-Communist)", "MENA (Middle East & North Africa)", "South Asia", "The Pacific")
models_by_region_df <- models_by_region %>%
map(., tidy) %>%
bind_rows(.id = "id") %>%
filter(term == "lag(pubfinindexstock1log, 5)") %>%
mutate(main_estim = -0.02,
conf_low_95 = estimate - 1.960*std.error,
conf_high_95 = estimate + 1.960*std.error,
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error)
names(models_by_region) <- c("Entire World" ,"Latin America", "The Caribbean", "Western Europe and North America", "Sub-Saharan Africa", "East Asia", "South-East Asia", "Eastern Europe and Central Asia (post-Communist)", "MENA (Middle East & North Africa)", "South Asia", "The Pacific")
models_by_region_df <- models_by_region %>%
map(., tidy) %>%
bind_rows(.id = "id") %>%
filter(term == "lag(pubfinindexstock1log, 5)") %>%
mutate(main_estim = -0.02,
conf_low_95 = estimate - 1.960*std.error,
conf_high_95 = estimate + 1.960*std.error,
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error)
ggplot(models_by_region_df, aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_95, ymax = conf_high_95, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
names(models_by_region)
names(models_by_region$`Entire World`)
names(models_by_region$`Entire World`$coefficients)
names(models_by_region$`Entire World`$coeftable)
names(models_by_region$`Entire World`$coefficients)
pf_data <- readRDS("hummel_data.rds")
pf_data <- readRDS("hummel_data.rds")
View(pf_data)
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8)
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8)
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
# Model labels
model_labels <- c("pubfinindexstock1log_l5" = "PFSI original",
"pubfin_add_l5" = "PFSI additive",
"pubfin_add_short_l5" = "PFSI additive: No duplicates",
"pfsi_recoded_l5" = "PFSI additive: No duplicates & recoded",
"v2x_polyarchyV8_l5" = "Poliarchy",
"I(v2x_polyarchyV8_l5^2)" = "Poliarchy squared",
"Fariss_Maddison_gdppc_1990_ln_l5" = "GDP per capita",
"Fariss_e_miurbani_l5" = "Urbanisation",
"Fariss_gdp_growth_l5" = "GDP growth",
"v2x_elecregV8_l5" = "Regular elections")
pf_data_panel <- panel(pf_data, ~Country + Year)
twfe_by_region_full <- list(
"Global"  = m1 <- feols(v2x_corrV8 ~ pubfinindexstock1log_l5 + v2x_polyarchyV8_l5 + I(v2x_polyarchyV8_l5^2) + Fariss_Maddison_gdppc_1990_ln_l5 + Fariss_e_miurbani_l5 + Fariss_gdp_growth_l5 + v2x_elecregV8_l5 | Country + Year, data = pf_data_panel, vcov = "twoway"),
"South-East Asia & the Pacific" = m2 <- update(m1, .~., data = subset(pf_data_panel, region_new == "South-East Asia & the Pacific")),
"Eastern Europe & Central Asia" = m3 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Eastern Europe and Central Asia (post-Communist)")),
"Middle East & North Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "MENA (Middle East & North Africa)")),
"Sub-Saharan Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Sub-Saharan Africa")),
"Latin America & the Caribbean" = m5 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Latin America & the Caribbean")),
"Western Europe & North America" = m6 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Western Europe and North America")))
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, v2x_corrV8, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
pf_data_panel <- panel(pf_data, ~Country + Year)
twfe_by_region_full <- list(
"Global"  = m1 <- feols(v2x_corrV8 ~ pubfinindexstock1log_l5 + v2x_polyarchyV8_l5 + I(v2x_polyarchyV8_l5^2) + Fariss_Maddison_gdppc_1990_ln_l5 + Fariss_e_miurbani_l5 + Fariss_gdp_growth_l5 + v2x_elecregV8_l5 | Country + Year, data = pf_data_panel, vcov = "twoway"),
"South-East Asia & the Pacific" = m2 <- update(m1, .~., data = subset(pf_data_panel, region_new == "South-East Asia & the Pacific")),
"Eastern Europe & Central Asia" = m3 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Eastern Europe and Central Asia (post-Communist)")),
"Middle East & North Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "MENA (Middle East & North Africa)")),
"Sub-Saharan Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Sub-Saharan Africa")),
"Latin America & the Caribbean" = m5 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Latin America & the Caribbean")),
"Western Europe & North America" = m6 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Western Europe and North America")))
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., tidy) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_95, ymax = conf_high_95, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
View(twfe_by_region_full_df)
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., ~tidy(.x, conf.int = TRUE)) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
saveRDS(pf_data, "pf_data.rds")
pf_data <- readRDS("pf_data.rds")
pf_data %>%
drop_na(pubfin_add) %>%
ggplot(aes(x = pubfin_add, y = v2x_corrV8, fill = factor(pubfin_add))) +
geom_boxplot(varwidth = T, notch = TRUE) +
scale_x_continuous(breaks = seq(0, 7, 1)) +
#geom_violin(scale = "area") +
scale_fill_brewer(palette = "Dark2") +
theme_light(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
axis.text = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 13, hjust = 0.5)) +
labs(x = "Political Finance Subsidy Index", y = "Corruption (V-Dem)")
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, v2x_corrV8, pubfin_add, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
saveRDS(pf_data, "pf_data.rds")
pf_data <- readRDS("pf_data.rds")
pf_data %>%
drop_na(pubfin_add) %>%
ggplot(aes(x = pubfin_add, y = v2x_corrV8, fill = factor(pubfin_add))) +
geom_boxplot(varwidth = T, notch = TRUE) +
scale_x_continuous(breaks = seq(0, 7, 1)) +
#geom_violin(scale = "area") +
scale_fill_brewer(palette = "Dark2") +
theme_light(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
axis.text = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 13, hjust = 0.5)) +
labs(x = "Political Finance Subsidy Index", y = "Corruption (V-Dem)")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each region reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering (by country and year).")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = str_wrap("Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each region reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering (by country and year).", width = 120))
