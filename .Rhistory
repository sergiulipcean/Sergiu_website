getwd()
closenness <- read.xlsx("PPGaffiliations_el_closeness.xlsx")
library(openxlsx)
library(tidyverse)
closenness <- read.xlsx("PPGaffiliations_el_closeness.xlsx")
setwd("C:/Users/sergi/OneDrive - University of Bergen/1_ConsultationEffects/my_stuff/poland_mps/02 PPG affiliation periods")
closenness <- read_csv("PPGaffiliations_el_closeness.csv")
View(closenness)
names(closenness)
closenness %>%
gpplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar() +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar() +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar(position = position_dodge()) +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar(position = position_dodge()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
library(janitor)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl()
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl(GENDER)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl(term, typeswitch, GENDER)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term)# %>%
closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "Male", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
View(df1)
?geom_bar
df1 %>%
ggplot(aes(x = typeswitch, fill = gender_n)) +
geom_bar(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = GENDER)) +
geom_bar(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = GENDER)) +
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = factor(GENDER)) )+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 <- closenness %>%
select(GENDER, typeswitch, term) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch))
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n())
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
pivot_wider(names_from = GENDER, values_from = gender_freq)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
pivot_wider(names_from = GENDER, values_from = gender_freq)
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE)
df1 %>%
ggplot(aes(x = gender_freq_ts, y = gender_freq_prop_ts, col = factor(GENDER)) )+
geom_point() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop, y = gender_freq_prop_ts, col = factor(GENDER)) )+
geom_point() +
facet_wrap(~term) #+
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers")
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers") %>%
arrange(term, typeswitch, GENDER)
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, col = factor(GENDER)))+
geom_col(position = position_stack()) +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_stack()) +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 1))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) #%>%
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
coord_flip() #+
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers") %>%
arrange(term, typeswitch, GENDER)
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
coord_flip() #+
View(df1)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 9, fig.height = 7)
# Download R packages
library(tidyverse)
library(haven)
library(rgl)
library(plotly)
library(webshot)
beeps <- read_dta("dpf_beeps_gcb.dta")
engagement_reg <- beeps %>%
select(country, year, dpfv_total, dpfv_total_stock, dpfv_total_stockpr, private_agreg, high_frequency_payment_bps, low_frequency_payment_bps, press_freedom_rev, v2x_libdem, democracy_scaled, status_fh, polity2, judicial_scaled, gdppc_ppp_2017, women_perc_wb, women_percent_ipu, prespow1, prespow2, contains("gov_"), contains("gini"), contains("ethn_fr"), eu_application, govern_type, idea_esf) %>%
rowwise() %>%
mutate(year2 = ifelse(!is.na(high_frequency_payment_bps), year, NA),
govern_type = ifelse(!is.na(high_frequency_payment_bps), govern_type, NA),
govern_type2 = case_when(govern_type == "Presidential" ~ 1, govern_type == "Semi-presidential" ~ 2, govern_type == "Parliamentary" ~ 3),
status_fh = case_when(status_fh == "NF" ~ 1, status_fh == "PF" ~ 2, status_fh == "F" ~ 3),
elect_syst = ifelse(!is.na(high_frequency_payment_bps), idea_esf, NA)) %>%
group_by(country) %>%
fill(c(elect_syst, year2), .direction = "up") %>%
select(-c(idea_esf, govern_type)) %>%
group_by(country, year2) %>%
summarise(across(.cols =(dpfv_total:elect_syst), ~ mean(.x, na.rm = TRUE))) %>%
mutate(across(.cols =(dpfv_total:elect_syst), ~ round(.x, 3))) %>%
mutate(across(.cols=(dpfv_total:elect_syst), ~ ifelse(is.nan(.x), NA, .x))) %>%
mutate(status_fh = round(status_fh),
high_frequency_payment_log = log(high_frequency_payment_bps),
low_frequency_payment_log = log(low_frequency_payment_bps),
high_frequency_payment_sqrt = sqrt(high_frequency_payment_bps),
low_frequency_payment_sqrt = sqrt(low_frequency_payment_bps),
high_frequency_payment_cube = high_frequency_payment_bps^(1/3),
high_frequency_payment_boxcox = car::bcnPower(high_frequency_payment_bps, lambda = 0.4642513, gamma = 0.1),
high_frequency_payment_yj = car::yjPower(high_frequency_payment_bps, lambda = 0.4122007)) %>%
#mutate(across(.cols=(high_frequency_payment_log:low_frequency_payment_sqrt), ~ ifelse(is.infinite(.x), 0, .x))) %>%
arrange(country, year2) %>%
filter(!is.na(year2)) %>%
rename("year" = "year2") %>%
mutate(year2 = factor(year)) %>%
ungroup()
engagement_reg2 <- engagement_reg %>%
drop_na(dpfv_total_stockpr, democracy_scaled, high_frequency_payment_sqrt) %>%
select(country, year, dpfv_total_stockpr, democracy_scaled, high_frequency_payment_sqrt, status_fh) %>%
rename("subsidies" = "dpfv_total_stockpr", "democracy" = "democracy_scaled", "capture" = "high_frequency_payment_sqrt") %>%
mutate(status_fh = factor(status_fh, labels = c("Not Free", "Partly Free", "Free")),
capture = round(capture,2))
gammod <- gam(capture ~ ti(subsidies, k = 20) + ti(democracy, k = 15), data = engagement_reg2)
library(mgcv)
gammod <- gam(capture ~ ti(subsidies, k = 20) + ti(democracy, k = 15), data = engagement_reg2)
#gammod <- gam(capture ~ s(subsidies, k = 10) + s(democracy, k=9), data = engagement_reg2)
# Now expand it to a grid so that persp will work
steps <- 100
subsidies <- with(engagement_reg2, seq(min(subsidies), max(subsidies), length = steps))
democracy <-  with(engagement_reg2, seq(min(democracy), max(democracy), length = steps))
newdat <- expand.grid(subsidies = subsidies, democracy = democracy)
capture <- matrix(predict(gammod, newdat), steps, steps) %>% t()
m <- list(l = 0,  r = 0, b = 0, t = 0, pad = 4)
#my_viridis <- viridisLite::viridis(20,option = "mako")
plot_ly(engagement_reg2, x = ~subsidies, y = ~democracy, z = ~capture
) %>%
add_markers(marker = list(size = 5),
color = ~status_fh,
colors = "viridis",
symbol = ~status_fh,
symbols = c("circle", "square", "x"),
hoverinfo = "text",
text = ~paste("Country: ", country, "<br>",
"Year: ", year, "<br>",
"State funding:", subsidies, "<br>",
"Democracy:", democracy, "<br>",
"State capture: ", capture)) %>%
add_surface(x=subsidies, z=capture, y=democracy, opacity = 0.6) %>%
#colorbar(title = "State<br>Capture", y = 0.8) %>%
layout(scene = list(xaxis = list(title = "State funding $"),
yaxis = list(title = "Democracy (V-Dem)"),
zaxis = list(title = "State capture % firms")),
legend = list(title=list(text='Democracy<br>status'),
font = list(size = 14),
y = 0.4),
margin = m) %>%
colorbar(title=list(text='State<br>capture'),
tickfont=list(size=14),
y = 0.9)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
####################################
#pf_data_h <- readRDS("hummel_data.rds") %>%
#  rename("Country" = "country_name", "Year" = "year")
pf_data <- readRDS("pf_data.rds")
write_csv(pf_data, "pf_data.csv")
####################################
#pf_data_h <- readRDS("hummel_data.rds") %>%
#  rename("Country" = "country_name", "Year" = "year")
pf_data <- read_csv("pf_data.csv")
pf_data %>%
drop_na(pubfin_add) %>%
ggplot(aes(x = pubfin_add, y = v2x_corrV8, fill = factor(pubfin_add))) +
geom_boxplot(varwidth = T, notch = TRUE) +
scale_x_continuous(breaks = seq(0, 7, 1)) +
#geom_violin(scale = "area") +
scale_fill_brewer(palette = "Dark2") +
theme_light(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
axis.text = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 13, hjust = 0.5)) +
labs(x = "Political Finance Subsidy Index", y = "Corruption (V-Dem)")
# Model labels
model_labels <- c("pubfinindexstock1log_l5" = "PFSI original",
"pubfin_add_l5" = "PFSI additive",
"pubfin_add_short_l5" = "PFSI additive: No duplicates",
"pfsi_recoded_l5" = "PFSI additive: No duplicates & recoded",
"v2x_polyarchyV8_l5" = "Poliarchy",
"I(v2x_polyarchyV8_l5^2)" = "Poliarchy squared",
"Fariss_Maddison_gdppc_1990_ln_l5" = "GDP per capita",
"Fariss_e_miurbani_l5" = "Urbanisation",
"Fariss_gdp_growth_l5" = "GDP growth",
"v2x_elecregV8_l5" = "Regular elections")
pf_data_panel <- panel(pf_data, ~Country + Year)
library(fixest)
pf_data_panel <- panel(pf_data, ~Country + Year)
twfe_by_region_full <- list(
"Global"  = m1 <- feols(v2x_corrV8 ~ pubfinindexstock1log_l5 + v2x_polyarchyV8_l5 + I(v2x_polyarchyV8_l5^2) + Fariss_Maddison_gdppc_1990_ln_l5 + Fariss_e_miurbani_l5 + Fariss_gdp_growth_l5 + v2x_elecregV8_l5 | Country + Year, data = pf_data_panel, vcov = "twoway"),
"South-East Asia & the Pacific" = m2 <- update(m1, .~., data = subset(pf_data_panel, region_new == "South-East Asia & the Pacific")),
"Eastern Europe & Central Asia" = m3 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Eastern Europe and Central Asia (post-Communist)")),
"Middle East & North Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "MENA (Middle East & North Africa)")),
"Sub-Saharan Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Sub-Saharan Africa")),
"Latin America & the Caribbean" = m5 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Latin America & the Caribbean")),
"Western Europe & North America" = m6 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Western Europe and North America")))
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., ~tidy(.x, conf.int = TRUE)) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
# Download R packages
library(tidyverse)
#library(readstata13)
library(fixest)
#library(openxlsx)
library(broom)
library(scales)
library(cowplot)
library(ggeffects)
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., ~tidy(.x, conf.int = TRUE)) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(20)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 12) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0, colour = "grey20"),
axis.text.x = element_text(size = 12, colour = "grey20"),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = str_wrap("Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each region reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering (by country and year).", width = 120))
getwd()
setwd("Downloads")
#setwd("C:/Users/sergi/OneDrive - University of Bergen/1_ConsultationEffects/my_stuff/referendum")
getwd()
setwd("C:/Users/sergi/OneDrive - University of Bergen/1_ConsultationEffects/my_stuff/referendum")
getwd()
presid_first <- read.xlsx("president_first_2024.xlsx") %>%
mutate(electoral_district = ifelse(str_detect(district, "Circumscripţia electorală"), district, NA_character_),
district = ifelse(str_detect(district, "Circumscripţia electorală"), NA_character_, district)) %>%
fill(electoral_district, .direction = "down") %>%
drop_na(district) %>%
select(electoral_district, district, everything()) %>%
mutate(rayon = str_extract(electoral_district, "(?<=municipală |raională ).*?(?=, nr)"),
rayon = ifelse(str_detect(electoral_district, "UTA Găgăuzia"), "Comrat", rayon),
rayon = ifelse(str_detect(electoral_district, "peste hotare"), "Diaspora", rayon))
library(tidyverse)
library(openxlsx)
library(countrycode)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(tmap)
library(fuzzyjoin)
library(scales)
library(plotly)
presid_first <- read.xlsx("president_first_2024.xlsx") %>%
mutate(electoral_district = ifelse(str_detect(district, "Circumscripţia electorală"), district, NA_character_),
district = ifelse(str_detect(district, "Circumscripţia electorală"), NA_character_, district)) %>%
fill(electoral_district, .direction = "down") %>%
drop_na(district) %>%
select(electoral_district, district, everything()) %>%
mutate(rayon = str_extract(electoral_district, "(?<=municipală |raională ).*?(?=, nr)"),
rayon = ifelse(str_detect(electoral_district, "UTA Găgăuzia"), "Comrat", rayon),
rayon = ifelse(str_detect(electoral_district, "peste hotare"), "Diaspora", rayon))
View(presid_first)
