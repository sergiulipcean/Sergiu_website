Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
pf_data <- pf_data %>%
select(Country, Year, region_new, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
# Model labels
model_labels <- c("pubfinindexstock1log_l5" = "PFSI original",
"pubfin_add_l5" = "PFSI additive",
"pubfin_add_short_l5" = "PFSI additive: No duplicates",
"pfsi_recoded_l5" = "PFSI additive: No duplicates & recoded",
"v2x_polyarchyV8_l5" = "Poliarchy",
"I(v2x_polyarchyV8_l5^2)" = "Poliarchy squared",
"Fariss_Maddison_gdppc_1990_ln_l5" = "GDP per capita",
"Fariss_e_miurbani_l5" = "Urbanisation",
"Fariss_gdp_growth_l5" = "GDP growth",
"v2x_elecregV8_l5" = "Regular elections")
pf_data_panel <- panel(pf_data, ~Country + Year)
twfe_by_region_full <- list(
"Global"  = m1 <- feols(v2x_corrV8 ~ pubfinindexstock1log_l5 + v2x_polyarchyV8_l5 + I(v2x_polyarchyV8_l5^2) + Fariss_Maddison_gdppc_1990_ln_l5 + Fariss_e_miurbani_l5 + Fariss_gdp_growth_l5 + v2x_elecregV8_l5 | Country + Year, data = pf_data_panel, vcov = "twoway"),
"South-East Asia & the Pacific" = m2 <- update(m1, .~., data = subset(pf_data_panel, region_new == "South-East Asia & the Pacific")),
"Eastern Europe & Central Asia" = m3 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Eastern Europe and Central Asia (post-Communist)")),
"Middle East & North Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "MENA (Middle East & North Africa)")),
"Sub-Saharan Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Sub-Saharan Africa")),
"Latin America & the Caribbean" = m5 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Latin America & the Caribbean")),
"Western Europe & North America" = m6 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Western Europe and North America")))
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, v2x_corrV8, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
pf_data_panel <- panel(pf_data, ~Country + Year)
twfe_by_region_full <- list(
"Global"  = m1 <- feols(v2x_corrV8 ~ pubfinindexstock1log_l5 + v2x_polyarchyV8_l5 + I(v2x_polyarchyV8_l5^2) + Fariss_Maddison_gdppc_1990_ln_l5 + Fariss_e_miurbani_l5 + Fariss_gdp_growth_l5 + v2x_elecregV8_l5 | Country + Year, data = pf_data_panel, vcov = "twoway"),
"South-East Asia & the Pacific" = m2 <- update(m1, .~., data = subset(pf_data_panel, region_new == "South-East Asia & the Pacific")),
"Eastern Europe & Central Asia" = m3 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Eastern Europe and Central Asia (post-Communist)")),
"Middle East & North Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "MENA (Middle East & North Africa)")),
"Sub-Saharan Africa" = m4 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Sub-Saharan Africa")),
"Latin America & the Caribbean" = m5 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Latin America & the Caribbean")),
"Western Europe & North America" = m6 <- update(m1, .~., data = subset(pf_data_panel, region_new == "Western Europe and North America")))
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., tidy) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_95, ymax = conf_high_95, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
View(twfe_by_region_full_df)
twfe_by_region_full_df <- twfe_by_region_full %>%
map(., ~tidy(.x, conf.int = TRUE)) %>%
bind_rows(.id = "id") %>%
filter(term == "pubfinindexstock1log_l5") %>%
mutate(main_estim = twfe_by_region_full$Global$coefficients[[1]],
conf_low_90 = estimate - 1.645*std.error,
conf_high_90 = estimate + 1.645*std.error,
measure_type = "PFSI Stock")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
saveRDS(pf_data, "pf_data.rds")
pf_data <- readRDS("pf_data.rds")
pf_data %>%
drop_na(pubfin_add) %>%
ggplot(aes(x = pubfin_add, y = v2x_corrV8, fill = factor(pubfin_add))) +
geom_boxplot(varwidth = T, notch = TRUE) +
scale_x_continuous(breaks = seq(0, 7, 1)) +
#geom_violin(scale = "area") +
scale_fill_brewer(palette = "Dark2") +
theme_light(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
axis.text = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 13, hjust = 0.5)) +
labs(x = "Political Finance Subsidy Index", y = "Corruption (V-Dem)")
pf_data <- readRDS("hummel_data.rds") %>%
rename("Country" = "country_name", "Year" = "year")
pf_data <- pf_data %>%
select(Country, Year, region_new, v2x_corrV8, pubfin_add, pubfinindexstock1log, v2x_polyarchyV8, v2x_polyarchyV8, Fariss_e_miurbani, v2x_elecregV8, pubfinindexstock1log_l5, pubfin_add_l5, pubfin_add_short_l5, pfsi_recoded_l5,
v2x_polyarchyV8_l5, Fariss_Maddison_gdppc_1990_ln_l5, Fariss_e_miurbani_l5,
Fariss_gdp_growth_l5, v2x_elecregV8_l5 )
saveRDS(pf_data, "pf_data.rds")
pf_data <- readRDS("pf_data.rds")
pf_data %>%
drop_na(pubfin_add) %>%
ggplot(aes(x = pubfin_add, y = v2x_corrV8, fill = factor(pubfin_add))) +
geom_boxplot(varwidth = T, notch = TRUE) +
scale_x_continuous(breaks = seq(0, 7, 1)) +
#geom_violin(scale = "area") +
scale_fill_brewer(palette = "Dark2") +
theme_light(base_family = "serif") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
axis.text = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 13, hjust = 0.5)) +
labs(x = "Political Finance Subsidy Index", y = "Corruption (V-Dem)")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each \nregion reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering \n(by country and year).")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = "Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each region reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering (by country and year).")
twfe_by_region_full_df %>%
ggplot(aes(x = fct_reorder(id, estimate), y= estimate)) +
geom_point(color = "grey40", size = 3, shape = 18, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, width = 0), color = "grey40",  size = 0.4, position = position_dodge(width = 1)) +
geom_errorbar(aes(ymin = conf_low_90, ymax = conf_high_90, width = 0), color = "grey40",  size = 1, position = position_dodge(width = 1)) +
geom_hline(aes(yintercept = main_estim), linetype = 2, color = "navy") +
geom_hline(yintercept = 0, linetype = 5, color = "red4") +
scale_x_discrete(labels = wrap_format(30)) +
scale_y_continuous(breaks = round(seq(-0.25, 0.15, 0.05),2)) +
coord_flip() +
#facet_wrap(~ period, scales = "free_y", nrow = 3) +
theme_light(base_family = "serif", base_size = 11) +
theme(panel.grid = element_blank(),
axis.ticks.length = unit(0.15, "cm"),
#panel.grid.major = element_line(colour = "grey90", size = 0.1),
plot.caption.position = "plot",
plot.caption = element_text(size = 11, hjust = 0),
axis.text.y = element_text(size = 12, hjust = 0),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 13),
axis.title.y = element_blank()) +
labs(x = "", y = "PFSI (logged) estimates with 90% and 95% Confidence Intervals",
caption = str_wrap("Note: The blue line represents the public funding estimate from the main analysis. The red line indicates whether regresssion models for each region reach statistical significance. Figure entries represent unstandardised coefficients with robust standard errors with twoway clustering (by country and year).", width = 120))
setwd("C:/Users/sergi/OneDrive - University of Bergen/1_ConsultationEffects/my_stuff/poland_mps/02 PPG affiliation periods")
getwd()
closenness <- read.xlsx("PPGaffiliations_el_closeness.xlsx")
library(openxlsx)
library(tidyverse)
closenness <- read.xlsx("PPGaffiliations_el_closeness.xlsx")
setwd("C:/Users/sergi/OneDrive - University of Bergen/1_ConsultationEffects/my_stuff/poland_mps/02 PPG affiliation periods")
closenness <- read_csv("PPGaffiliations_el_closeness.csv")
View(closenness)
names(closenness)
closenness %>%
gpplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar() +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar() +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar(position = position_dodge()) +
facet_wrap(~term)
closenness %>%
ggplot(aes(x = typeswitch, fill = GENDER)) +
geom_bar(position = position_dodge()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
library(janitor)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl()
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl(GENDER)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
tabyl(term, typeswitch, GENDER)
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term)# %>%
closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch) %>%
summarise(gender_n = sum(GENDER))
closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "MALE", 0, 1)) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(GENDER = ifelse(GENDER == "Male", 0, 1)) %>%
group_by(term, typeswitch, GENDER) %>%
summarise(gender_n = n())
View(df1)
?geom_bar
df1 %>%
ggplot(aes(x = typeswitch, fill = gender_n)) +
geom_bar(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = GENDER)) +
geom_bar(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = GENDER)) +
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_n, fill = factor(GENDER)) )+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 <- closenness %>%
select(GENDER, typeswitch, term) #%>%
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch))
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n())
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
pivot_wider(names_from = GENDER, values_from = gender_freq)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
pivot_wider(names_from = GENDER, values_from = gender_freq)
View(df1)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq)
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) #%>%
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE)
df1 %>%
ggplot(aes(x = gender_freq_ts, y = gender_freq_prop_ts, col = factor(GENDER)) )+
geom_point() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop, y = gender_freq_prop_ts, col = factor(GENDER)) )+
geom_point() +
facet_wrap(~term) #+
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers")
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers") %>%
arrange(term, typeswitch, GENDER)
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, col = factor(GENDER)))+
geom_col(position = position_stack()) +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_stack()) +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = gender_freq_prop_ts, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) #+
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col() +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 1))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.4))
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) #%>%
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
coord_flip() #+
df1 <- closenness %>%
select(GENDER, typeswitch, term) %>%
mutate(typeswitch = ifelse(is.na(typeswitch), "Non-switchers", typeswitch)) %>%
group_by(term) %>%
mutate(mps_freq = n()) %>%
group_by(term, GENDER) %>%
mutate(gender_freq = n()) %>%
group_by(term, GENDER, typeswitch) %>%
mutate(gender_freq_ts = n()) %>%
mutate(gender_freq_prop = gender_freq/mps_freq,
gender_freq_prop_ts = gender_freq_ts/gender_freq) %>%
distinct(.keep_all = TRUE) %>%
filter(typeswitch != "Non-switchers") %>%
arrange(term, typeswitch, GENDER)
df1 %>%
ggplot(aes(x = typeswitch, y = gender_freq_prop_ts, fill = factor(GENDER)))+
geom_col(position = position_fill()) +
facet_wrap(~term) +
coord_flip() #+
View(df1)
